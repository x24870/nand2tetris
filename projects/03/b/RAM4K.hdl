// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address[9..11], a=selRamA, b=selRamB, c=selRamC, d=selRamD, e=selRamE, f=selRamF, g=selRamG, h=selRamH);
	RAM512(in=in, load=selRamA, address=address[0..8], out=RamA);
	RAM512(in=in, load=selRamB, address=address[0..8], out=RamB);
	RAM512(in=in, load=selRamC, address=address[0..8], out=RamC);
	RAM512(in=in, load=selRamD, address=address[0..8], out=RamD);
	RAM512(in=in, load=selRamE, address=address[0..8], out=RamE);
	RAM512(in=in, load=selRamF, address=address[0..8], out=RamF);
	RAM512(in=in, load=selRamG, address=address[0..8], out=RamG);
	RAM512(in=in, load=selRamH, address=address[0..8], out=RamH);
	Mux8Way16(a=RamA, b=RamB, c=RamC, d=RamD, e=RamE, f=RamF, g=RamG, h=RamH, sel=address[9..11], out=out);
}