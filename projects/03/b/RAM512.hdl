// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address[6..8], a=selRamA, b=selRamB, c=selRamC, d=selRamD, e=selRamE, f=selRamF, g=selRamG, h=selRamH);
	RAM64(in=in, load=selRamA, address=address[0..5], out=RamA);
	RAM64(in=in, load=selRamB, address=address[0..5], out=RamB);
	RAM64(in=in, load=selRamC, address=address[0..5], out=RamC);
	RAM64(in=in, load=selRamD, address=address[0..5], out=RamD);
	RAM64(in=in, load=selRamE, address=address[0..5], out=RamE);
	RAM64(in=in, load=selRamF, address=address[0..5], out=RamF);
	RAM64(in=in, load=selRamG, address=address[0..5], out=RamG);
	RAM64(in=in, load=selRamH, address=address[0..5], out=RamH);
	Mux8Way16(a=RamA, b=RamB, c=RamC, d=RamD, e=RamE, f=RamF, g=RamG, h=RamH, sel=address[6..8], out=out);
}